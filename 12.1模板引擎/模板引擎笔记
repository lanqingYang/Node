模板引擎是第三方模块
为了让开发者以更友好的方式拼接字符串，使项目代码更加清晰，更加易于维护

步骤：
模板引擎是第三方模块: npm install atr-template
引入模块 const template=require('art-template')
告诉模板引擎需要拼接的数据和模板在哪儿 const html=template('模板路径'，)

1. 输出带标签 
标准语法 原文输出 加@ 
    <p>{{@ content}}</p>
原始语法 原文输出 <%- content%>  ‘=’ 变成‘-’
ps:如果你的数据中带有html标签，默认情况下 模板引擎不会进行解析

2. 判断：
标准： {{if ()}}{{else if}}{{else}}{{/if}}
原始：<% if() { %><% }else if {%><%} else {%><%}%>


3. 循环：
标准语法： {{each 数据}}{{/each}}
原始语法：<% for () {%> <% } %>

4. 引入子模版:
使用子模版将网站公共区块（头部、底部）抽离到单独的文件中
标准: {{include '路径'}}
原始:<% include('路径') %>


5. 模板继承：
HTML骨架<---继承--- 首页页面模板 ----包含子模版--->头部文件
HTML骨架<---继承--- 其他页面模板 ----包含子模版--->头部文件

layout(布局)
{{ block 'content' }}{{/block}} 在模板中预留位置，通过名字来找坑的位置来填充,通过填坑来写一些当前页面特有的一些内容
<!-- {{extend '继承的模板的路径'}} -->
{{extend './common/layout.art'}}

6.模板配置 
 .1导入模板变量
template.defaults.imports.变量名=变量值 （变量值可以是其他第三方模块提供的方法）
 .2设置模板根目录
template.defaults.root = path.join(__dirname, "views");
 .3设置默认模板后缀
template.defaults.extname = ".art";
