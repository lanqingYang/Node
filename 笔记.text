0.基础配置：
  settings.json文件中：{
   //.art文件被识别为html
    "files.associations": {
        "*.art": "html"
    },
    
    //模板语法中 按tab键补全代码
    "emmet.triggerExpansionOnTab": true,
    "emmet.showAbbreviationSuggestions": true,
    "emmet.showExpandedAbbreviation": "always",
    "emmet.includeLanguages": {
        "javascript": "html"
    }
  }


1.node.js
  包含了 ECMAScript和nodeAPI相关的函数

2.node.js的回调函数的第一个参数都是err 
  （错误优先的回调函数，err存储错误信息，err是个对象
  err==null 说明未发生错误）



3.第三方模块！！！！
  别人写好的，具有特定功能的，能直接用的模块。
  由于第三方模块通常由多个文件组成并且被放置在一个文件夹中，又称为 包！
  两种存在形式： js形式，提供实现项目具体功能的API接口  命令行工具形式存在，复制项目开发
  获取： npsjs.com 第三方模块的存储和分发仓库


！！！！npm(node packge manager):node的第三方模块管理工具
下载：npm install 模块名称（本地安装）
默认下载模块到命令行工具中的当前工作目录下面
.1会自动创建node_modules文件夹，第三方模块会被下载到这里
.2自动创建package-lock.json 与node_modules文件夹同级
卸载：npm uninstall package 模块名称

本地安装与全局安装：
  本地：将模块下载到当前的项目中，供当前的项目使用 （库文件进行本地安装）
  全局：将模块下载到公共的目录中，供所有的项目使用 （命令行工具进行全局安装）

3.1 第三方模块 nodemon
  nodemon 命令行工具，
  监控文件的保存操作，当文件发生保存操作就会重新执行该文件（无需在命令行中再去执行该文件）
  ·下载：npm install nodemon -g 
  ·在命令行工具中用nodemon命令代替node命令执行该文件



4。环境配置 关于用户变量和系统变量
    用户变量 ：存放xxx.cmd文件的地方 （不会出现。xxx不是命令的错误）
    系统变量： 存放xxx模块的地方，到里面去找东西运行，在path中放入：npm和模块的存放地址
    vscode 可能不能运行新下载的全局模块，用管理员方式打开！
 

5.npm可以下载多个模块 
  多个模块以空格的形式隔开就可以了 npm install formidable mime


6.node.js全局对象global
    浏览器中全局对象window，node中全局对象global
  node中全局对象有以下方法，可用在任何地方，global可以省略：
  ·console.log()     在控制台中输出
  ·setTimeout()      设置超时定时器
  ·clearTimeout()    清除超时定时器
  ·setInterval()     设置间歇定时器
  ·clearInterval()   清除间歇定时器